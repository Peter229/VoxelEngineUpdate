#pragma once

#include "glm/glm.hpp"
#include "shader.h"
#include "resource_manager.h"
#include <vector>

static const float cubeVerts[] = {
		0.0f, 0.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 1.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 0.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 1.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 0.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 1.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,

		0.0f, 0.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 0.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 1.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 1.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 1.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 0.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,

		0.0f, 1.0f,  1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 1.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 0.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 0.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 0.0f,  1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f,  1.0f,  1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,

		1.0f, 1.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 0.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 1.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 0.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 1.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 0.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,

		0.0f, 0.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 0.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 0.0f,  1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 0.0f,  1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 0.0f,  1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 0.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,

		0.0f, 1.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 1.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 1.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		1.0f, 1.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 1.0f, 0.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f,
		0.0f, 1.0f, 1.0f,  0.8f, 0.2f, 0.0f, 0.0f, 0.0f
};

class Model {

public:
	Model();

	void renderCube(Shader *shader, glm::mat4 model);

	void genVAO();

private:

	unsigned int VAO, VBO;
};